"colorscheme darkblue
filetype off		" aparently required

" set viminfo location
set viminfo+=n~/.config/vim/viminfo

" set the runtime path to include vundle
set rtp+=~/.config/vim/bundle/Vundle.vim
call vundle#begin('~/.config/vim/bundle')

" let Vundle manage Vundle,... wtf is this?
Plugin 'VundleVim/Vundle.vim'
"Plugin 'ycm-core/YouCompleteMe'
Plugin 'neoclide/coc.nvim', {'branch': 'release'}
Plugin 'preservim/nerdtree'
Plugin 'lervag/vimtex'
Plugin 'junegunn/goyo.vim'
"Plugin 'terryma/vim-smooth-scroll'
Plugin 'gryf/wombat256grf'
Plugin 'morhetz/gruvbox'
Plugin 'airblade/vim-gitgutter'
Plugin 'stevearc/vim-arduino'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'danilamihailov/beacon.nvim'
Plugin 'itchyny/calendar.vim'

call vundle#end()
filetype plugin indent on
syntax on

colorscheme wombat256grf
set termguicolors
highlight Normal guibg=NONE ctermbg=NONE

let g:vimtex_view_method = 'zathura'

"noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 5, 1)<CR>
"noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 5, 1)<CR>
"noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 5, 1)<CR>
"noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 5, 1)<CR>
"noremap <silent> <PageUp> :call smooth_scroll#up(&scroll*2, 5, 1)<CR>
"noremap <silent> <PageDown> :call smooth_scroll#down(&scroll*2, 5, 1)<CR>

noremap <silent> <c-d> :NERDTreeToggle<CR>

set rnu
set nu

set updatetime=200
au CursorHold * sil call CocActionAsync('highlight')
au CursorHoldI * sil call CocActionAsync('showSignatureHelp')

autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')

nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction

" use <tab> for trigger completion and navigate to the next complete item
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction

inoremap <silent><expr> <Tab>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<Tab>" :
      \ coc#refresh()

inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm() : "\<C-g>u\<CR>"

" ======= airline config =======
"let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='airlineminimal'

" air-line
"let g:airline_powerline_fonts = 1


if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
"let g:airline_left_sep = '»'
"let g:airline_left_sep = '▶'
"let g:airline_right_sep = '«'
"let g:airline_right_sep = '◀'
"let g:airline_right_sep = ''
"let g:airline_right_sep = '│'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
"let g:airline_right_sep = ''
"let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" ===== vim-arduino config =====
autocmd BufNewFile,BufRead *.ino let g:airline_section_x='%{MyStatusLine()}'
nnoremap <buffer> <leader>am :ArduinoVerify<CR>
nnoremap <buffer> <leader>au :ArduinoUpload<CR>
nnoremap <buffer> <leader>ad :ArduinoUploadAndSerial<CR>
nnoremap <buffer> <leader>ab :ArduinoChooseBoard<CR>
nnoremap <buffer> <leader>ap :ArduinoChooseProgrammer<CR>

" my_file.ino [arduino:avr:uno] [arduino:usbtinyisp] (/dev/ttyACM0:9600)
function! MyStatusLine()
  let port = arduino#GetPort()
  let line = '%f [' . g:arduino_board . '] [' . g:arduino_programmer . ']'
  if !empty(port)
    let line = line . ' (' . port . ':' . g:arduino_serial_baud . ')'
  endif
  return line
endfunction
setl statusline=%!MyStatusLine()
" ======= NERDTree CONFIG ========
"au VimEnter * NERDTree

" ======== BEACON CONFIG =========
highlight Beacon guibg=yellow ctermbg=11
let g:beacon_shrink = 1
let g:beacon_fade = 1
let g:beacon_timeout = 500
let g:beacon_minimal_jump = 15

" ===== COLOR THEMME AIRLINE =====
hi Normal guibg=NONE ctermbg=NONE

" ======= CALENDAR CONFIG ========
"let g:calendar_google_calendar = 1
"let g:calendar_google_task = 1

